#!/usr/bin/env python

import sys
import numpy as np
import umap
import matplotlib
matplotlib.use('Agg') #added 16march22 for compl with nohub
import matplotlib.pyplot as plt
from sklearn import decomposition
import random
import pandas as pd
import hdbscan

df = pd.read_csv(sys.argv[1], delimiter="\t")
neighbors=int(sys.argv[2])
clustersize=int(sys.argv[3])
minsamples=int(sys.argv[4])
epsilon=float(sys.argv[5])

print(neighbors)


#UMAP
motifs = [x for x in df.columns.values if x not in ["read", "length"]]
X = df.loc[:,motifs]
X_embedded = umap.UMAP(n_neighbors=neighbors, min_dist=0, verbose=2).fit_transform(X) #edit 2may22 -> 14jun22 low_memory=True removed for increased speed; n_neigh from 30 to 15

df_umap = pd.DataFrame(X_embedded, columns=["D1", "D2"])
umap_out = pd.concat([df["read"], df["length"], df_umap], axis=1)

#HDBSCAN
X = umap_out.loc[:,["D1", "D2"]]
umap_out["bin_id"] = hdbscan.HDBSCAN(min_cluster_size=clustersize,min_samples=minsamples,cluster_selection_epsilon=epsilon).fit_predict(X) #14jun22 min_cluster from 80 to 40; min_samples 50 to 20

#PLOT
plt.figure(figsize=(20,20))
plt.scatter(X_embedded[:, 0], X_embedded[:, 1], c=umap_out["bin_id"], cmap='Spectral', s=1)
plt.xlabel("UMAP1", fontsize=18)
plt.ylabel("UMAP2", fontsize=18)
plt.gca().set_aspect('equal', 'datalim')
plt.title("Projecting " + str(len(umap_out['bin_id'])) + " reads. " + str(len(umap_out['bin_id'].unique())) + " clusters generated by HDBSCAN", fontsize=18)

for cluster in np.sort(umap_out['bin_id'].unique()):
    read = umap_out.loc[umap_out['bin_id'] == cluster].iloc[0]
    plt.annotate(str(cluster), (read['D1'], read['D2']), weight='bold', size=14)

plt.savefig(sys.argv[1]+'hdbscan.output.png')
umap_out.to_csv(sys.argv[1]+"hdbscan.output.tsv", sep="\t", index=False)
